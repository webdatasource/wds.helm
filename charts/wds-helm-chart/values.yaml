global:
  # Docker registry for all images
  registry: docker.io
  # Default resource requests and limits for all services
  resources:
    requests:
      # Minimum CPU requested per pod
      cpu: 100m        
      # Minimum memory requested per pod
      memory: 256Mi    
  # Extra labels applied to all deployments (can be overridden per service)
  deploymentExtraLabels: {}
  # Extra labels applied to all services (can be overridden per service)
  serviceExtraLabels: {}
  # Default nodeSelector for all pods
  nodeSelector: {}
  # Default tolerations for all pods
  tolerations: []
  # Default affinity rules for all pods
  affinity: {}
  coreServices:
    # Deployment mode. Values: "SingleService", "MultiService"
    # SingleService: only solidstack is deployed together with its service
    # MultiService: all core services are deployed (dapi, datakeeper, crawler, scraper, idealer) together with their services
    mode: SingleService
    # License key to run application in the MultiService mode (use for a vault reference. For instance, https://github.com/bank-vaults/vault-secrets-webhook)
    license:
      key: ""
      # Reference to a Kubernetes secret that contains a license key.
      # keyRef:
      #   name: my-secret
      #   key: license-key
      keyRef: {}
    # Cache configuration (is used only in MultiService mode)
    # If both connectionString and connectionStringSecretRef are set, connectionString is used.
    cache:
      # Cache connection string. If not set, the MongoDB will be used as a cache (use for a vault reference. For instance, https://github.com/bank-vaults/vault-secrets-webhook)
      connectionString: ""
      # Reference to a Kubernetes secret that contains the cache connection string.
      # connectionStringSecretRef:
      #   name: my-secret
      #   key: connection-string
      connectionStringSecretRef: {}
      # Database name if a DB is used for caching. If not set, a database name from the connection string will be used.
      databaseName: "" 
    # Database configuration
    databases:
      # MongoDB
      # If both connectionString and connectionStringSecretRef are set, connectionString is used.
      mongodb:
        # MongoDB connection string (use for a vault reference. For instance, https://github.com/bank-vaults/vault-secrets-webhook)
        connectionString: ""
        # Reference to a Kubernetes secret that contains the MongoDB connection string.
        # connectionStringSecretRef:
        #   name: my-secret
        #   key: connection-string
        connectionStringSecretRef: {}
        # MongoDB database name. If not set, a database name from the connection string will be used.
        databaseName: "WebDataSource" 
    # Available job types
    jobTypes: 
    - intranet # Crawl data from intranet sources with no limits
    - internet # Crawl data from internet sources via request gateways (proxy addresses, external IP addresses, etc.)
    # External IP configurations for crawling web resources on Internet
    externalIpConfigs:
    - intranet # Reserved value to allow crawling for Intranet jobs.
    - amazon # The https://checkip.amazonaws.com is used to get a public IP address
    # Defines how much time should be waited before responding with an HTTP error (in case of). Default value is 1 second
    exceptionResponseDelayMs: ""
    # Maximum inactive seconds to re-register crawler. Default value is 60 seconds
    maxInactiveSecToReregistrar: ""
  auxiliaryServices:
    docs:
      # Whether to deploy docs service
      enabled: true
      # Docs image default tag. Its release cadence is different from other services because documentation is released more often
      defaultTag: "v2.0"
    playground:
      # Whether to deploy playground service
      enabled: true
  # Minimum log level for all services. Values: "Trace", "Debug", "Information", "Warning", "Error", "Critical"
  minLogLevel: "Information"
  # Ingress configuration
  ingress:
    # Whether to add ingress
    enabled: false
    # If the ingressClassName is omitted, a default Ingress class should be defined
    className: "nginx"
    # Ingress annotations to add
    annotations: {}
    # Base path for all services. Must ends with '/'. For instance, if is set to '/wds/', all services will be available under these paths:
    # - API: http://your-domain/wds/api
    # - MCP: http://your-domain/wds/mcp
    # - Docs: http://your-domain/wds/docs
    # - Playground: http://your-domain/wds/playground
    # - etc.
    basePath: "/"
  # Global Horizontal Pod Autoscaler defaults (can be overridden per service under <service>.hpa)
  hpa:
    enabled: true
    # Default minimum number of replicas (used if service.hpa.minReplicas not set)
    minReplicas: 1
    # Default maximum number of replicas (used if service.hpa.maxReplicas not set)
    maxReplicas: 3
    # Target average CPU utilization percentage
    targetCPUUtilizationPercentage: 80
    # Target average Memory utilization percentage (optional; set to null to disable)
    targetMemoryUtilizationPercentage: null
  # Global Pod Disruption Budget defaults (can be overridden per service under <service>.pdb)
  pdb:
    enabled: true
    # Specify one of minAvailable or maxUnavailable. If both provided in a service override, minAvailable wins.
    minAvailable: 1
    maxUnavailable: null
coreServices:
  solidstack:
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    # HPA/PDB intentionally not supported for solidstack (SingleService mode)
  dapi:
    # Number of pod replicas
    replicaCount: 2
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.config.coreServices.databases.mongodb.databaseName for this service
    databases:
      mongodb:
        databaseName: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: {}
  datakeeper:
    # Number of pod replicas
    replicaCount: 2
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.config.coreServices.databases.mongodb.databaseName for this service
    databases:
      mongodb:
        databaseName: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: {}
  crawler:
    # Number of pod replicas
    replicaCount: 2
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: {}
  scraper:
    # Number of pod replicas
    replicaCount: 2
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: {}
  idealer:
    # Number of pod replicas
    replicaCount: 2
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.config.coreServices.databases.mongodb.databaseName for this service
    databases:
      mongodb:
        databaseName: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: {}
auxiliaryServices:
  playground:
    # Number of pod replicas
    replicaCount: 1
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: .Chart.AppVersion)
      tag: ""
      # Image pull policy (default: IfNotPresent)
      pullPolicy: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb:
      enabled: false # Enable if replicaCount > 1
    
  docs:
    # Number of pod replicas
    replicaCount: 1
    image:
      # Image name (repository/name)
      name: ""
      # Image tag (default: global.auxiliaryServices.docs.defaultTag)
      tag: ""
      # Image pull policy (default: Always)
      pullPolicy: ""
    # Override global.resources for this service
    resourcesOverride: {}
    # Override global.deploymentExtraLabels 
    deploymentExtraLabelsOverride: {}
    # Override global.serviceExtraLabels for this service
    serviceExtraLabelsOverride: {}
    # Override global.nodeSelector for this service
    nodeSelectorOverride: {}
    # Override global.tolerations for this service
    tolerationsOverride: []
    # Override global.affinity for this service
    affinityOverride: {}
    hpa: {}
    pdb: 
      enabled: false # Enable if replicaCount > 1
    
