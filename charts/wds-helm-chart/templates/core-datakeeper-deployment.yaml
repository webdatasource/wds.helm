{{- if eq .Values.global.coreServices.mode "MultiService" }}
  {{- $name := "datakeeper" }}
  {{- $dbConn := dict "name" "DB_CONNECTION_STRING" "value" .Values.global.coreServices.databases.mongodb.connectionString }}
  {{- if and (not .Values.global.coreServices.databases.mongodb.connectionString) (hasKey .Values.global.coreServices.databases.mongodb.connectionStringSecretRef "name") (hasKey .Values.global.coreServices.databases.mongodb.connectionStringSecretRef "key") }}
    {{- $dbConn = dict "name" "DB_CONNECTION_STRING" "valueFrom" (dict "secretKeyRef" (dict "name" .Values.global.coreServices.databases.mongodb.connectionStringSecretRef.name "key" .Values.global.coreServices.databases.mongodb.connectionStringSecretRef.key)) }}
  {{- end }}
  {{- $env := list
    (dict "name" "IDEALER_ORIGIN" "value" "http://idealer")
    $dbConn
    (dict "name" "LICENSE_KEY" "value" .Values.global.coreServices.license.key)
    (dict "name" "MIN_LOG_LEVEL" "value" .Values.global.minLogLevel)
  }}
  {{- if .Values.global.coreServices.cache.connectionString }}
    {{- $env = append $env (dict "name" "CACHE_CONNECTION_STRING" "value" .Values.global.coreServices.cache.connectionString) }}
  {{- else if and (hasKey .Values.global.coreServices.cache.connectionStringSecretRef "name") (hasKey .Values.global.coreServices.cache.connectionStringSecretRef "key") }}
    {{- $env = append $env (dict "name" "CACHE_CONNECTION_STRING" "valueFrom" (dict "secretKeyRef" (dict "name" .Values.global.coreServices.cache.connectionStringSecretRef.name "key" .Values.global.coreServices.cache.connectionStringSecretRef.key))) }}
  {{- end }}

  {{ include "wds-helm-chart.deployment" (dict
    "ctx" .
    "name" $name
    "labels" (merge (default (dict) .Values.coreServices.datakeeper.deploymentExtraLabelsOverride) (default (dict) .Values.global.deploymentExtraLabels))
    "replicas" (.Values.coreServices.datakeeper.replicaCount | default 2)
    "nodeSelector" (.Values.coreServices.datakeeper.nodeSelectorOverride | default .Values.global.nodeSelector)
    "tolerations" (.Values.coreServices.datakeeper.tolerationsOverride | default .Values.global.tolerations)
    "affinity" (.Values.coreServices.datakeeper.affinityOverride | default .Values.global.affinity)
    "containers" (list
      (dict
        "name" "datakeeper"
        "registry" .Values.global.registry
        "image" (.Values.coreServices.datakeeper.image.name | default "webdatasource/datakeeper")
        "tag" (.Values.coreServices.datakeeper.image.tag | default .Chart.AppVersion)
        "imagePullPolicy" (.Values.coreServices.datakeeper.image.pullPolicy | default "IfNotPresent")
        "ports" (list (dict "name" "grpc-web-dk" "containerPort" 8082) (dict "name" "grpc-web-rm" "containerPort" 8083))
        "env" $env
      )
    )
  ) }}
{{- end }}
