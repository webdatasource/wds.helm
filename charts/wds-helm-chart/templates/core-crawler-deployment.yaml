{{- if eq .Values.global.coreServices.mode "MultiService" }}
  {{- $name := "crawler" }}
  {{- $env := list
    (dict "name" "DATAKEEPER_ORIGIN" "value" "http://datakeeper-rm")
    (dict "name" "SERVICE_HOST" "valueFrom" (dict "fieldRef" (dict "fieldPath" "status.podIP")))
    (dict "name" "EXTERNAL_IP_ADDRESS_CONFIGS" "value" (join "," .Values.global.coreServices.externalIpConfigs))
    (dict "name" "LICENSE_KEY" "value" .Values.global.coreServices.license.key)
    (dict "name" "MIN_LOG_LEVEL" "value" .Values.global.minLogLevel)
  }}
  {{- if .Values.global.coreServices.maxInactiveSecToReregistrar }}
    {{- $env = append $env (dict "name" "MAX_INACTIVE_SEC_TO_REREGISTRAR" "value" .Values.global.coreServices.maxInactiveSecToReregistrar) }}
  {{- end }}

  {{ include "wds-helm-chart.deployment" (dict
    "ctx" .
    "name" $name
    "labels" (merge (default (dict) .Values.coreServices.crawler.deploymentExtraLabelsOverride) (default (dict) .Values.global.deploymentExtraLabels))
    "replicas" (.Values.coreServices.crawler.replicaCount | default 2)
    "nodeSelector" (.Values.coreServices.crawler.nodeSelectorOverride | default .Values.global.nodeSelector)
    "tolerations" (.Values.coreServices.crawler.tolerationsOverride | default .Values.global.tolerations)
    "affinity" (.Values.coreServices.crawler.affinityOverride | default .Values.global.affinity)
    "containers" (list
      (dict
        "name" $name
        "registry" .Values.global.registry
        "image" (.Values.coreServices.crawler.image.name | default "webdatasource/crawler")
        "tag" (.Values.coreServices.crawler.image.tag | default .Chart.AppVersion)
        "imagePullPolicy" (.Values.coreServices.crawler.image.pullPolicy | default "IfNotPresent")
        "ports" (list (dict "name" "grpc-web" "containerPort" 8082))
        "env" $env
      )
    )
  ) }}

  
{{- end }}
